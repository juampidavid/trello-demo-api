name: Base API CI/CD

on:
  push:
    branches:
      - main
      - staging

jobs:
  build:
    runs-on: ubuntu-latest
    # Select GitHub Action environment:
    environment: ${{ env.stage }}
    env:
      # Define the environment
      stage: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}

    outputs:
      version: ${{ steps.get_version.outputs.version }}
      stage: ${{ env.stage }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up JDK 22
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '22'

      - name: Create tmp directory
        run: |
          mkdir -p ~/tmp
          chmod 777 ~/tmp

      - name: Install xmllint
        run: sudo apt-get install -y libxml2-utils

      - name: Run tests
        run: mvn test
        env:
          TRELLO_API_KEY: ${{ secrets.TRELLO_API_KEY }}
          TRELLO_TOKEN: ${{ secrets.TRELLO_TOKEN }}
          TRELLO_BOARD_ID: ${{ secrets.TRELLO_BOARD_ID }}
          TRELLO_LIST_ID: ${{ secrets.TRELLO_LIST_ID }}

      - name: Get version from pom.xml
        id: get_version
        run: |
          version=$(xmllint --xpath "/*[local-name()='project']/*[local-name()='version']/text()" pom.xml)
          echo "version=$version" >> "$GITHUB_OUTPUT"

      - name: Build with Maven
        run: mvn clean install
        env:
          TRELLO_API_KEY: ${{ secrets.TRELLO_API_KEY }}
          TRELLO_TOKEN: ${{ secrets.TRELLO_TOKEN }}
          TRELLO_BOARD_ID: ${{ secrets.TRELLO_BOARD_ID }}
          TRELLO_LIST_ID: ${{ secrets.TRELLO_LIST_ID }}

      - name: Create Deployment Package
        run: |
          mkdir -p deploy/aws-code-deploy
          cp target/*.jar deploy/api.jar          
          cp -r aws-code-deploy/${{ env.stage }}/* deploy/aws-code-deploy/
          cp appspec.yml deploy/
          echo "${{ steps.get_version.outputs.version }}" > ./deploy/version.txt
          zip -r trello-api-deployment-${{ steps.get_version.outputs.version }}.zip ./deploy

      - name: Upload Deployment Package
        uses: actions/upload-artifact@v4
        with:
          name: trello-api-deployment-${{ steps.get_version.outputs.version }}
          path: trello-api-deployment-${{ steps.get_version.outputs.version }}.zip
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      application-name: trello-app

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: trello-api-deployment-${{ needs.build.outputs.version }}
          path: ./

      - name: Set AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_DEPLOY_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_DEPLOY_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Upload to S3
        run: |
          aws s3 cp ./trello-api-deployment-${{ needs.build.outputs.version }}.zip \
          s3://trello-app-${{ needs.build.outputs.stage }}/api/trello-api-deployment-${{ needs.build.outputs.version }}.zip

      - name: Run CodeDeploy deployment
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.application-name }} \
            --deployment-group-name ${{ needs.build.outputs.stage }} \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --s3-location bucket=trello-app-${{ needs.build.outputs.stage }},bundleType=zip,key=api/trello-api-deployment-${{ needs.build.outputs.version }}.zip
